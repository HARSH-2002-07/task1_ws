<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="four_wheel_bot">

  <!-- Parameters -->
  <xacro:property name="wheel_radius" value="0.06"/>
  <xacro:property name="wheel_length" value="0.04"/> 
  <xacro:property name="wheel_sep_x" value="0.3"/>  <!-- distance between front and rear wheel centers -->
  <xacro:property name="wheel_sep_y" value="0.445"/> <!-- distance between left and right wheel centers -->
  <xacro:property name="base_height" value="0.15"/>
  <xacro:property name="base_length" value="0.6"/>
  <xacro:property name="base_width"  value="0.4"/>
  <xacro:property name="base_mass"   value="10.0"/>

  <!-- Compute inertia for a box -->
  <xacro:property name="ixx" value="${(1/12.0)*base_mass*(base_width*base_width + base_height*base_height)}"/>
  <xacro:property name="iyy" value="${(1/12.0)*base_mass*(base_length*base_length + base_height*base_height)}"/>
  <xacro:property name="izz" value="${(1/12.0)*base_mass*(base_length*base_length + base_width*base_width)}"/>

  <!-- Materials -->
  <material name="black">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  
  <material name="blue">
    <color rgba="0.0 0.2 0.8 1"/>
  </material>

  <!-- Base link -->
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 ${wheel_radius + base_height/2.0}" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia ixx="${ixx}" ixy="0.0" ixz="0.0" iyy="${iyy}" iyz="0.0" izz="${izz}"/>
    </inertial>
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin xyz="0 0 ${wheel_radius + base_height/2.0}" rpy="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin xyz="0 0 ${wheel_radius + base_height/2.0}" rpy="0 0 0"/>
    </collision>
  </link>

  <!-- Macro for wheel -->
  <xacro:macro name="wheel" params="prefix px py name">
    <link name="${name}_link">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.5"/>
        <inertia ixx="0.00045" ixy="0.0" ixz="0.0" iyy="0.00045" iyz="0.0" izz="0.0009"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}_link"/>
      <origin xyz="${px} ${py} ${wheel_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/> 
      <dynamics damping="0.1" friction="0.1"/>
      <limit effort="10" velocity="10"/>
    </joint>
  </xacro:macro>

 <!-- Gazebo differential drive controller -->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    
    <!-- Update rate -->
    <update_rate>50</update_rate>
    
    <!-- Wheels - map to your joint names -->
    <left_joint>front_left_joint</left_joint>
    <left_joint>rear_left_joint</left_joint>
    <right_joint>front_right_joint</right_joint>
    <right_joint>rear_right_joint</right_joint>
    
    <!-- Kinematics -->
    <wheel_separation>0.445</wheel_separation>
    <wheel_diameter>0.12</wheel_diameter>
    
    <!-- Limits -->
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>
    
    <!-- Output settings -->
    <publish_odom>false</publish_odom>
    <publish_odom_tf>false</publish_odom_tf>
    <publish_wheel_tf>true</publish_wheel_tf>
    <publish_wheel_joint_state>true</publish_wheel_joint_state>
    
    <!-- Topic names -->
    <command_topic>cmd_vel</command_topic>
    <odometry_topic>gazebo_odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
    
  </plugin>
</gazebo>

<!-- Joint state publisher plugin -->
<gazebo>
  <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
    <update_rate>50</update_rate>
    <joint_name>front_left_joint</joint_name>
    <joint_name>front_right_joint</joint_name>
    <joint_name>rear_left_joint</joint_name>
    <joint_name>rear_right_joint</joint_name>
  </plugin>
</gazebo>

  <!-- Four wheels with corrected symmetry -->
  <xacro:wheel prefix="front_left"  px="${wheel_sep_x/2.0}"  py="${wheel_sep_y/2.0}"  name="wheel_fl"/>
  <xacro:wheel prefix="front_right" px="${wheel_sep_x/2.0}"  py="${-wheel_sep_y/2.0}" name="wheel_fr"/>
  <xacro:wheel prefix="rear_left"   px="${-wheel_sep_x/2.0}" py="${wheel_sep_y/2.0}"  name="wheel_rl"/>
  <xacro:wheel prefix="rear_right"  px="${-wheel_sep_x/2.0}" py="${-wheel_sep_y/2.0}" name="wheel_rr"/>

</robot>
